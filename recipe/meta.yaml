{% set version = "0.7.0" %}

package:
  name: tango-split
  version: {{ version }}

source:
  url: https://github.com/allenai/tango/archive/refs/tags/v{{ version }}.tar.gz
  sha256: e0cf9424ea2f00cc8169bb034f6b3e5412997013a2c00d9834a9dc789ed9ffaf
  patches:
    # upstream expectes the folders /tests & /test_fixtures to be relative
    # to the finished package, even though those folders are not packaged;
    # effectively, the upstream test suite can currently only be run in (their)
    # development mode, so patch it that we can properly test the package here.
    - patches/0001-patch-TangoTestCase-so-that-test-suite-can-be-run-wi.patch
    # stop build from installing setuptools & wheel from pypi
    - patches/0002-delete-pyproject.toml.patch

build:
  number: 0
  skip: true  # [win]

# Need these up here for conda-smithy to handle them properly.
requirements:
  host:
    - python
  run:
    - python

outputs:
  - name: tango
    build:
      script: {{ PYTHON }} -m pip install . --no-deps -vv
      skip: true  # [win]
      entry_points:
        - tango=tango.__main__:main
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - python
        - pip
        - setuptools <60
        - wheel
      run:
        - python
        - base58
        - cached_path >=1.0,<1.1
        - click >=7.0,<9.0
        - click-help-colors >=0.9.1,<0.10.0
        - dill
        - filelock >=3.4,<3.7
        - glob2 >=0.7
        - jsonnet >=0.10.0  # [not win]
        - more-itertools >=8.0,<9.0
        - petname >=2.6,<3.0
        - python-xxhash
        - pyyaml >=5.4.1,<6.1
        - sqlitedict
        - tqdm >=4.62,<4.63
    test:
      requires:
        - pytest
        - flaky
        - git
      source_files:
        - tests/
        - test_fixtures/
        # needed by a test
        - examples/
      imports:
        - tango
      commands:
        - tango --help
        # test_experiment_with_multiprocessing seems to fail
        # spuriously while trying to match exact logging output
        - pytest tests/ --ignore=tests/integrations -v -k "not test_experiment_with_multiprocessing"

  - name: tango-all
    build:
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('tango', exact=True) }}
        - {{ pin_subpackage('tango-datasets', exact=True) }}
        - {{ pin_subpackage('tango-fairscale', exact=True) }}
        - {{ pin_subpackage('tango-pytorch_lightning', exact=True) }}
        - {{ pin_subpackage('tango-torch', exact=True) }}
        - {{ pin_subpackage('tango-transformers', exact=True) }}
        - {{ pin_subpackage('tango-wandb', exact=True) }}
    test:
      imports:
        # see other outputs for more specific tests
        - tango
      requires:
        - pip
      commnds:
        # run only once for all subpackages
        - pip check

  - name: tango-datasets
    build:
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('tango', exact=True) }}
        - datasets >=1.12,<2
    test:
      imports:
        - tango.integrations.datasets
      requires:
        - pytest
        - flaky
        - git
      source_files:
        - test_fixtures/
        - tests/
      commands:
        - pytest -v tests/integrations/datasets

  - name: tango-fairscale
    build:
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('tango', exact=True) }}
        - fairscale =0.4.5
        - numpy
        - pytorch >=1.9.0,<1.11.0
        # until v1.11.0, pytorch has an undeclared dependency on setuptools,
        # see pytorch/pytorch#71280, and breaks with new versions
        - setuptools <59.5
    test:
      imports:
        - tango.integrations.fairscale
      requires:
        - pytest
        - flaky
        - git
      source_files:
        - test_fixtures/
        - tests/
      commands:
        - pytest -v tests/integrations/fairscale

  - name: tango-pytorch_lightning
    build:
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('tango', exact=True) }}
        - pytorch >=1.9.0,<1.11.0
        - pytorch-lightning >=1.5.0,<1.6.0
        # until v1.11.0, pytorch has an undeclared dependency on setuptools,
        # see pytorch/pytorch#71280, and breaks with new versions
        - setuptools <59.5
    test:
      imports:
        - tango.integrations.pytorch_lightning
      requires:
        - pytest
        - flaky
        - git
      source_files:
        - test_fixtures/
        - tests/
      commands:
        - pytest -v tests/integrations/pytorch_lightning

  - name: tango-torch
    build:
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('tango', exact=True) }}
        - numpy
        - pytorch >=1.9.0,<1.11.0
        # until v1.11.0, pytorch has an undeclared dependency on setuptools,
        # see pytorch/pytorch#71280, and breaks with new versions
        - setuptools <59.5
    test:
      imports:
        - tango.integrations.torch
      requires:
        - pytest
        - flaky
        - git
      source_files:
        - test_fixtures/
        - tests/
      commands:
        - pytest -v tests/integrations/torch

  - name: tango-transformers
    build:
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('tango', exact=True) }}
        - datasets >=1.12,<2
        - numpy
        - pytorch >=1.9.0,<1.11.0
        # until v1.11.0, pytorch has an undeclared dependency on setuptools,
        # see pytorch/pytorch#71280, and breaks with new versions
        - setuptools <59.5
        - sentencepiece >=0.1.96
        - transformers >=4.12.3
    test:
      imports:
        - tango.integrations.transformers
      requires:
        - pytest
        - flaky
        - git
      source_files:
        - test_fixtures/
        - tests/
      commands:
        - pytest -v tests/integrations/transformers

  - name: tango-wandb
    build:
      skip: true  # [win]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('tango', exact=True) }}
        - wandb >=0.12,<0.13
    test:
      imports:
        - tango.integrations.wandb

about:
  home: https://github.com/allenai/tango
  license: Apache-2.0
  license_file: LICENSE
  summary: AI2 Tango replaces messy directories and spreadsheets full of file versions by organizing experiments into discrete steps that can be cached and reused throughout the lifetime of a research project.
  description: |
    AI2 Tango is a platform that allows you to build machine learning experiments
    out of steps that can be reused and repeated. It eliminates duplicate work,
    stores past results, and keeps track of how they were obtained so you can
    quickly identify and trace back your best work. Experiments are flexible,
    so you can change direction, pursue another idea and incorporate feedback,
    without losing previous results. Write your own steps by wrapping common
    Python functions, or take advantage of the library of pre-built steps for
    training models, working with datasets, and running evaluations. It is
    integrated with popular tools like the Huggingface transformers library,
    PyTorch Lightning, and others.
  doc_url: https://ai2-tango.readthedocs.io
  dev_url: https://github.com/allenai/tango

extra:
  recipe-maintainers:
    - h-vetinari
  feedstock-name: tango
